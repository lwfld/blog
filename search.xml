<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F%23%20%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92.html</url>
    <content type="text"><![CDATA[人机交互Chapter11.1 什么是人机交互狭义地讲，就是指人与计算机之间的信息交换。输入设备，输出设备。多门学科综合。 1.2 人机交互的研究内容 人机交互界面的表示模型与设计方法 可用性分析与评估 多通道交互技术 认知与智能用户界面 群件 Web设计 移动界面设计 Chapter22.3 认知过程与交互设计原则 经验认知 有效、轻松地观察、操作和响应周围的事件 思维认知 思考、比较和决策 2.3.1 常见认知过程 感知和识别 令感官易于识别 注意 基本特征：指向性和集中性 功能方面： 选择功能：选择注意对象 保持功能：保持注意力 对活动的调节和监督功能：通过注意可以控制目标进行 品质方面： 注意的广度：注意的对象数量 注意的稳定性：长时间的注意 注意的分配：一心二用 注意的转移：字面意思 目标和信息表示 目标：找到自己需要什么 信息表示：醒目，易于区分 记忆 过滤，排序，口令 问题解决 隐藏一些附加信息 语言处理 文字，语音，照顾不同对象 2.3.2 影响认知的因素 情感 情感状态会影响人的推理、判断能力，针对不同情感状态做出相应设计 个体差异 设计交互系统时不能忽视人与人之间的个体差异 动机和兴趣 设计提升用户的动机和兴趣 Chapter33.3.2 三维显示设备 立体视觉 立体视觉原理 视差：左右眼的细微差异 立体影像显示技术 主动式立体模式（控制镜片开闭）和被动式立体模式（两台投影仪） 头盔式显示器 投影拼接融合的沉浸式显示环境 裸眼立体显示设备 Chapter44.1 人机交互输入模式 请求模式 执行过程中需要用户输入时，暂停程序执行，直到接收到输入之后，才继续执行。 采样模式 输入与程序执行相互独立。不断读入输入，替换旧输入，取样命令取出当前存放的输入。 事件模式 输入设备将输入保存到一个输入队列，对输入设备的操作形成一次事件。 4.5 自然交互技术4.5.5 眼动跟踪技术 概念： 注视 跳动 平滑尾随跟踪 原理： 发出红外线获得反射信号绘制出眼球完整图像，分为硬件（眼球）与软件（面部）两种 测量方法 4.5.6 笔交互技术现阶段还是把笔当作鼠标的替代品 手写识别技术分联机与脱机两种 Chapter55.1 界面设计原则5.1.1 图形用户界面的主要思想 桌面隐喻 直接隐喻 工具隐喻 过程隐喻 所见即所得 直接操纵 直接操纵的对象时动作或数据的形象隐喻 用指点和选择代替键盘输入 操作结果立即可见 支持逆向操作 5.1.2 图形用户界面设计的一般原则 界面要具有一致性 常用操作要有快捷方式 提供必要的错误处理功能 提供信息反馈 允许操作可逆 设计良好的联机帮助 合理划分并高效地使用显示屏幕 Chapter77.2 Web界面设计原则 以用户为中心 一致性 简洁与明确 体现特色 兼顾不同的浏览器 明确的导航设计 7.4 Web界面设计技术7.4.1 HTML123456789&lt;img src="w3schools.jpg" alt="W3Schools.com" width="104" height="142"&gt;&lt;link rel="stylesheet" href="https://www.w3schools.com/html/styles.css"&gt;&lt;video width="320" height="240" controls&gt; &lt;source src="movie.mp4" type="video/mp4"&gt; &lt;source src="movie.ogg" type="video/ogg"&gt;Your browser does not support the video tag.&lt;/video&gt; &lt;strong&gt; - Important text &lt;em&gt; - Emphasized text &lt;mark&gt; - Marked text &lt;small&gt; - Small text &lt;del&gt; - Deleted text &lt;ins&gt; - Inserted text &lt;sub&gt; - Subscript text &lt;sup&gt; - Superscript text Bootstrap 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;title&gt;Bootstrap 4 Example&lt;/title&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"&gt; &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"&gt;&lt;/script&gt; &lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;nav class="navbar navbar-expand-sm bg-light"&gt; &lt;!-- Links --&gt; &lt;ul class="navbar-nav"&gt; &lt;li class="nav-item"&gt; &lt;a class="nav-link" href="#"&gt;Link 1&lt;/a&gt; &lt;/li&gt; &lt;li class="nav-item"&gt; &lt;a class="nav-link" href="#"&gt;Link 2&lt;/a&gt; &lt;/li&gt; &lt;li class="nav-item"&gt; &lt;a class="nav-link" href="#"&gt;Link 3&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/nav&gt;&lt;/body&gt;&lt;/html&gt; 7.4.2 Javascript1234567891011121314&lt;html&gt; &lt;head&gt; &lt;link rel="stylesheet" href="index.css"&gt; &lt;script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt; &#123;&#123; message &#125;&#125; &lt;/div&gt; &lt;script src="index.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 123456var app = new Vue(&#123; el: '#app', data: &#123; message: 'Hello Vue!' &#125;&#125;); 7.4.3 服务器端脚本语言asp, jsp, php 7.4.4 AJAX技术AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下。 7.4.5 WebGL技术three.js Chapter 88.2 移动界面设计原则自身特点： 资源相对匮乏 移动设备的种类繁多 连接方式复杂 设计原则： 简单直观 个性化设计 易于检索 界面风格一致 避免不必要的文本输入 根据用户的要求使服务个性化 最大限度地避免用户出错 文本信息应当本地化 小程序设计指南 友好礼貌 重点突出 流程明确 清晰明确 导航明确，来去自如 减少等待，反馈及时 异常可控，有路可退 便捷优雅 减少输入 避免误操作 利用接口提升稳定性 统一稳定]]></content>
  </entry>
  <entry>
    <title><![CDATA[贰]]></title>
    <url>%2Fthoughts%2Fthoughts0620.html</url>
    <content type="text"><![CDATA[没想到距离上一篇已经过了一个月了，这其中的自己固然不是没有什么思考，只是犹豫着要不要写进来的时候，一天天地就这么过去了。但是任由时间流去自己却不做点什么，似乎也有悖于我当时决定要写这个东西的初衷。]]></content>
      <categories>
        <category>thoughts</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Jupyter Notebook | 交互式笔记本]]></title>
    <url>%2Ftools%2Fjupyter.html</url>
    <content type="text"><![CDATA[About Jupyter Notebook第一次听到说这个软件还是来自于我的一个同学，当时我正对找不到一个适合Python的文本编辑器而发愁，Jupyter Notebook就被推荐给我了。这当然对我来说是个新奇玩意，既能跑python的代码也可以写markdown，光是有这两个功能就非常好用了，更别说有更多的进阶功能了。网上查了一下才知道这叫做交互式笔记本，官网上说这款笔记本适用于： Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more. 安装12345# install jupyter with anaconda去Anaconda官网下载Anaconda即可，安装完成后会一并安装Jupyter# install jupyter with pippip install jupyter 配置12# 生成jupyter的配置信息文件jupyter notebook --generate-config 如果没有错误提示，提示信息里面应该有生成的jupyter_notebook_config.py文件的目录，打开它，找到一行： #c.NotebookApp.notebook_dir = &#39;&#39; 取消注释，在单引号内部填入你想要的Jupyter启动（储存）文件夹，保存后退出就可以了。 启动启动非常简单，控制台输入 jupyter notebook 即可，不过要维持启动窗口的运行哦。 主题通过pip安装12345# install jupyterthemespip install jupyterthemes# upgrade to latest versionpip install --upgrade jupyterthemes 命令行参数/用法12345jt [-h] [-l] [-t THEME] [-f MONOFONT] [-fs MONOSIZE] [-nf NBFONT] [-nfs NBFONTSIZE] [-tf TCFONT] [-tfs TCFONTSIZE] [-dfs DFFONTSIZE] [-m MARGINS] [-cursw CURSORWIDTH] [-cursc CURSORCOLOR] [-vim] [-cellw CELLWIDTH] [-lineh LINEHEIGHT] [-altp] [-altmd] [-altout] [-P] [-T] [-N] [-r] [-dfonts] 命令行参数具体描述 cl options arg default Usage help -h – List Themes -l – Theme Name to Install -t – Code Font -f – Code Font-Size -fs 11 Notebook Font -nf – Notebook Font Size -nfs 13 Text/MD Cell Font -tf – Text/MD Cell Fontsize -tfs 13 Pandas DF Fontsize -dfs 9 Output Area Fontsize -ofs 8.5 Mathjax Fontsize (%) -mathfs 100 Intro Page Margins -m auto Cell Width -cellw 980 Line Height -lineh 170 Cursor Width -cursw 2 Cursor Color -cursc – Alt Prompt Layout -altp – Alt Markdown BG Color -altmd – Alt Output BG Color -altout – Style Vim NBExt* -vim – Toolbar Visible -T – Name &amp; Logo Visible -N – Reset Default Theme -r – Force Default Fonts -dfonts – 我使用的主题的参数1jt -t monokai -f firacode -fs 12 -ofs 11 -T -N -cursc x -cursw 5 -altp -cellw 80% 修改之前（初始界面）： 通过jupyterthemes修改主题之后： 当然也可以进行自定义主题的设置，在下方文档可以找到相关资料。 使用新建一个文件之后，主界面大概是这个样子。 在cell里面，一般使用code模式和markdown模式。 code模式下可以立即编译python代码。 每个cell都是独立的，比如你在运行一个cell的时候，其他cell并不会受到影响。 进阶操作可以看文末提到的推荐文章，这里不做详细描述。 参考资料Jupyter Notebook’s doc jupyter-themes’ README 左手程序员，右手作家 - 鱼心DrFish - 简书]]></content>
      <categories>
        <category>tools</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Sublime Text 3 | 文本编辑器]]></title>
    <url>%2Ftools%2Fst3.html</url>
    <content type="text"><![CDATA[About Sublime Text 3作为一个程序猿，掌握一个文本编辑器是非常重要的，可以给自己的编码带来质量与速度的提升。 之前也用过很多的文本编辑器，vscode，atom，notepad++… 我没那么专业，不考虑那些性能啊的问题，只想要一个足够简洁但功能不简单而且能整好看的就对了，反正用到现在，sublime现在给我的印象还算是很好的。Download Page 根据官方文档总结的特性：Column Selectionwith 鼠标同时按住 Shift + 鼠标右键 就可以垂直选择区域，同时按住 Ctrl + Shift + 鼠标右键 就可以添加，同时按住 Alt + Shift + 鼠标右键 就可以在选中区域中扣掉一部分区域。 with 键盘Ctrl + Alt + ↑/↓ Multiple Selection with the Keyboard添加一行Ctrl + Alt + ↑/↓ 可以用于添加光标上方或者下方的一行 如果选多了的话，可以使用 Ctrl + U 来进行撤销操作 分割选中部分Ctrl + Shift + L 可以用于将选中部分按行分割成单独的一行 合并行Ctrl + J 可以将选中的多行合并为一行 选中相同字段Ctrl + D 可以用于快速选择下一个一样的字段 Alt + F3 可以直接选择所有一样的字段 鼠标操作Ctrl + 鼠标左键也可以选中多处（添加多个光标） Other FeaturesSnippetSnippet指的是代码片段，我们一般可以在输入关键字之后按Tab键来达到快速输入的效果。 进入 Tools &gt; Developer &gt; New Snippet…，文件模板如图： contentcontent标签内部就是代码片段的主体 tabTrigger通过tab触发的关键字 scope在scope内的文件类型才会套用这种snippet，若不填写则表示所有文件都套用 官方文档 Set SyntaxCtrl + Shift + P 叫出 Command Palette，输入ss就可以看到很多候选项，用于确定这个文件的类型。 Build Systems构建系统可以让您通过外部程序来运行文件，并可以在Sublime Text查看输出。 快捷键：Ctrl + B 如果要自己新建一个Build System: Tools &gt; Build System &gt; New Build System…（details看文档） 常用快捷键 Command Info Ctrl + P 快速打开文件（当前目录及子目录下） Ctrl + Shift + P 调出命令面板（Command Palette） Ctrl + R 快速跳转到函数 Ctrl + G 快速跳转到某一行 Ctrl + K , Ctrl + B 显示/隐藏侧栏 Ctrl + K , Ctrl + U/L 所选部分替换为大写/小写 Alt + Shift + 1/2/3/4/5/8/9 1/2/3/4：竖直分屏；5:四屏；8/9：水平分屏 Ctrl + Shift + D 向下复制行 Ctrl + Shift + K 删除当前行 主题可以在 packagecontrol.io 自己选择喜欢的。链接已经是根据受欢迎程度排序的，在这里就不一一列举了。 插件安装Package Control我们需要通过Package Control来管理各种插件。 打开Sublime Text 3 的Console再复制以下代码进去就可以安装了。 1import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) （到 packagecontrol.io 找到以上这段代码，这个网站还提供安装包安装的方式。） Plugins List合适的插件很多，关键是看用来做什么，不在这里详细说明，只收录一下。 IMESupport 解决中文输入法不跟随的问题 这个插件如果只是在Package Control中进行安装的话是解决不了win10下面的问题的，需要去下载一份修改版 clone 到 Sublime_Text_3_Install_Path/Data/Packages 目录下。 AdvancedNewFile 通过 Ctrl + Alt + N 打开路径输入框，输入要新建的文件路径及后缀，自动生成相应目录并把文件的Syntax设置为对应类型。 FileHeader 文件首部模板 SideBarEnhancements 增强侧栏的功能 Emmet 前端工具，可以大量缩短编码时间。 LiveReload 前端工具，监听资源文件夹实现自动刷新 AutoFileName SublimeCodeIntel SublimeREPL 常用文件类型的模板 A File Icon … 文档 官方文档 Sublime Text Unofficial Documentation Sublime Text Unofficial Documentation(中文版)]]></content>
      <categories>
        <category>tools</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Launchy | 快速启动工具]]></title>
    <url>%2Ftools%2Flaunchy.html</url>
    <content type="text"><![CDATA[About LaunchyLaunchy是一个免费，开源的跨平台快速启动工具，主要是通过快捷键方式叫出一个搜索框，在里面输入你想要的或者命令，就可以达到快速启动的效果，可以完全通过键盘达到高效并快速启动软件的目的，同样也可以搜索本地文件，快速打开网页，以某种指令启动某个程序等等，可以到说明文档中看到支持的功能，总体给我的感觉就是增强的 Windows+R 和 Cortana 的合体版本，如果有这方面需求不妨一试。 Download下载的话在Launchy的官网就可以找到，提供各种系统的版本，如下图： Settings默认通过 Alt + Space 叫出搜索框，Ctrl + , 可以打开设置。 Skins皮肤选项卡下可以自由选择皮肤，自带了几种皮肤，如果想要更加个性化的皮肤，可以去Launchy Gallery on DeviantArt下载，下载完成后把文件夹丢到Launchy的安装目录下的skins文件夹即可。另外如果有更深层次的个性化要求，可以通过编辑皮肤文件夹下的style.qss文件。根据我自己的简单摸索，其中的一些属性如下： input: 输入框的外观描述 font: 字号 字体 备选字体 font-weight: 字体粗细 border-width: border的宽度 background-color: 背景色(十六进制表示 or rgba表示) border-style: 边框类型 selection-background-color: 选中部分背景色(十六进制表示 or rgba表示) color: 文字颜色(十六进制表示 or rgba表示) qproperty-alignment： 文本框对齐方式 qproperty-geometry： 文本框矩形位置及大小(前两位表示矩形起始坐标，后两位表示长和宽) output: 查询结果的外观描述(属性同上) alternatives: 候选选项外观描述 alternate-background-color: 候选选项背景色(十六进制表示 or rgba表示) selection-background-color: 选中选项背景色(十六进制表示 or rgba表示) alternativesPath: 候选选项路径外观描述(属性同上)之后去专门查了一下，qss文件是qt的样式表，怪不得看起来很像css，基本上可以支持css2.0，所以上述我没有继续把属性说完了，相信可以通过css来找到你们想要修改到的风格吧，基本上就是如此，我是在Combat皮肤的基础上修改得到的我现在的启动器皮肤，如图： 如果有需要的话，以下是地址：原版 Combat我的微调过的版本 Catalog 到了最常用的部分了，这里就是实现检索的地方，点击 + 添加目录之后，选择需要被扫描的文件类型(后缀)，可以是可执行文件(.exe)或者直接是一个目录，深度为0就是添加的那个目录本身那一级都会被扫描，参数设置好以后点击扫描，你需要的文件就都被录进去了，点击确认就可以在搜索框找到你刚才添加的目录里面的东西了。 Plugins插件选项卡下内置了几种插件，同时官网也有一些可以提供下载的：上面的插件都有下载链接以及说明页面，选择你需要的即可，下载完成后还是一样把dll文件丢到Launchy的安装目录下的plugins文件夹即可。软件自带的几种着重讲一下，我认为比较实用的就Calcy, Runner和Weby了，Calcy比较容易用，就直接输入四则运算就好了，其他两个： Runner: 我们可以看到一共有三个参数可以填，分别是Name, Program和Arguments，这样看起来还是比较好理解咯，意思就是你在Launchy搜索框里面输入你设定的Name之后，就相当于你以你设定的Arguments执行了你指定的Program，就比较有bash的感觉。 Weby： 像这样设置就能在搜索框实现百度或者google的关键词查询了，输入google后按tab，再输入你想要查询的内容就行了。如果要进行其他网站的搜索，可以看一下那个网站的url格式是怎么样的，这里的%1表示的是用户输入的内容。 上面两个选项是关于书签的，看了别人的方法好像也没有成功，就放弃了，欢迎讨论。 EOF这个小工具是真的很小了，但是可以让自己效率提高不少，毕竟作为一个敲代码的，能不用鼠标就尽量不用吧，其中包含的小功能也非常实用，对了，它还可以直接通过输入文件路径来预览目录结构，也算是个不错的功能吧。另外通过Runner可以跟其他更多的软件进行配合，这让这个小东西的潜力更大了。 那么，今天这篇就先这样了。]]></content>
      <categories>
        <category>tools</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[壹]]></title>
    <url>%2Fthoughts%2Fthoughts0519.html</url>
    <content type="text"><![CDATA[前几天美剧看得太烦，想看的没更新，自己又找来找去也没什么感兴趣的，看到李狗嗨的简介决定试看一集，没想到这一看，就让自己把两部都给补完了，自己是真的觉得，日剧啊，还真是喜欢讲些人生哲理呀。 我这人以前算是活泼开朗，现在大概也是，只是现在讨厌维持交际了，毕竟现在只要不发动态不发朋友圈，整个人大体上就可以消失了，要是连课也不去上，估计真的就可以跟周围大多数的人丧失唯一的交集了。也许现在自己的思想是有些问题，不过我还没遇到转变这些看法的契机。 一个人能跟另一个人产生联系，我绝对觉得这是一种概率不高的事件，用这样的词来表述，就避免了感情色彩，因为毕竟真的是有好有坏。总会有人中彩票，总会有人被流弹打到；你费尽力气想认识的女神，恰好只是他的同桌。你大发慈悲扶起的一个老太太，恰好只是想碰你的瓷。没有什么被选召的孩子，我们每个人在自己的人生轨迹里都是被选召的那个孩子，只不过你想走我的路，我想走他的路。 甚至有时候，我还想让你走我的路，还不让你走我走过的弯路。 第一季的黛和第二季的晴树，让我真正体会到了这一点。辛苦学习一路走来都是为了自己坚守的信念，当律师也是为了正义，为了幸福。看了那么多集自己终于有了点体会，你凭什么觉得你坚信的正义和幸福，就是真正的正义和幸福？接受这样的信念之后，之前的信念肯定会崩塌吧。都觉得古美门是恶人的代表，也确实是，不过他更代表了他坚持的东西，只坚信自己想达成的目标，就是赢。无关要代理的人是对是错，他只为赢就对了，法律不就是这样的吗？法律也不是为了维护善恶对错的吧？法律只是个判断条件，它会告诉你如果是a怎么做如果是b怎么做，它绝不会让a或b带上主观的感情色彩。我们不是神，我们没资格说什么是善，什么是恶，我们只知道什么时候自己肚子饿了。 如人饮水，冷暖自知。 此篇完。]]></content>
      <categories>
        <category>thoughts</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Shadowsocks | 科学上网工具]]></title>
    <url>%2Ftools%2Fss.html</url>
    <content type="text"><![CDATA[About Shadowsocks外面的世界也不总是很精彩，可总有人想去看看，因为毕竟Great Firewall不让我们看嘛。 不管是怎样的需求，要想突破这道墙，shadowsocks就是一个极其方便的办法。但也许对很多人来说也并不那么方便，现在还是有很多VPN服务供应商嘛，用免费的也还大有人在，安全性肯定没有保证，相对保险的方法还是自己买个国外或者香港那边的服务器比较好，这篇指南就是讲如何搭建自己的shadowsocks服务器。 关于购买服务器这个我不做多的推荐了，不是本文的重心。 百度或者知乎关键字：vps 列举一些我比较熟悉的vps提供商：vultr, digitalocean, linode, bandwagon…（同样可以搜索以上提到的提供商，可能还会找到现有的优惠信息）。 ssh软件连接至你购买的vpsxshell, putty 安装，配置与启用安装在终端中输入如下指令： Debian / Ubuntu: 12apt-get install python-pippip install shadowsocks CentOS: 12yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks 新建配置文件1vim /etc/shadowsocks.json 在vim文本编辑界面，敲下键盘上的 i 或者 Insert 键进入Insert模式， 复制如下字符，再输入 Shift + Insert 粘贴到这个文件里面。 12345678910&#123; &quot;server&quot;:&quot;my_server_ip&quot;, &quot;server_port&quot;:8388, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;mypassword&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false&#125; 启动根据配置文件后台启动： 12ssserver -c /etc/shadowsocks.json -d start //启动ss服务ssserver -c /etc/shadowsocks.json -d stop //停止]]></content>
      <categories>
        <category>tools</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo | 快速、简洁且高效的博客框架]]></title>
    <url>%2Ftools%2Fhexo.html</url>
    <content type="text"><![CDATA[About Hexohexo，就像下面的图片上写到的，是一个快速、简洁且高效的博客框架。 以Markdown格式编写文章，解析后生成全静态页面，生成速度确实也很快， 完成部署后就可以成为现在看到的样子。 对中文支持友好。官网上的文档说明很详细，大部分自定义的需求都能够被满足。 支持许多插件，对一般博客的功能需求都能够满足。 接下来应该会写一篇关于通过 Github Pages &amp; hexo 来搭建出静态博客的步骤解读。 EOF]]></content>
      <categories>
        <category>tools</category>
      </categories>
  </entry>
</search>
